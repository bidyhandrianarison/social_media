/config/database.php
<?php
  
class Database {
    private $host="localhost";
    private $db_name= "social_media";
    private $username= "bidyh";
    private $password= "MySecureP@ssw0rd";
    public $conn;

    //METHOD
    public function getConnection(){
        $this->conn=null;
        try{
            $this->conn = new PDO('mysql:host='.$this->host.';dbname='.$this->db_name, $this->username, $this->password); 
        }catch(PDOException $e){
            die(''.$e->getMessage());
        }
        return $this->conn;
    }
}
?>
/public/assets/js/auth/register.js
$(document).ready(function () {
    // Inscription
    $('#registerForm').submit(function (e) {
        e.preventDefault();
        let values = {
            lastName: $('input[name="lastName"]').val(),
            firstName: $('input[name="firstName"]').val(),
            email: $('input[name="email"]').val(),
            password: $('input[name="password"]').val()
        };

        $.ajax({
            type: 'POST',
            url: '/src/Views/auth/register.php',
            data: values,
            success: function (response) {
                let result = JSON.parse(response);
                if (result.status === 'success') {
                    alert('Inscription réussie! Vous pouvez maintenant vous connecter.');
                    $('#register').hide();
                    $('#login').show();
                } else {
                    alert(result.message);
                }
            }
        });
    });

    // Connexion
    $('#loginForm').submit(function (e) {
        e.preventDefault();
        let values = {
            email: $('input[name="email"]').val(),
            password: $('input[name="password"]').val()
        };

        $.ajax({
            type: 'POST',
            url: '/src/Views/auth/login.php',
            data: values,
            success: function (response) {
                let result = JSON.parse(response);
                if (result.status === 'success') {
                    alert('Connexion réussie!');
                    // window.location.href = "/src/Views/posts/list.php";
                } else {
                    alert(result.message);
                }
            }
        });
    });
});

/public/assets/js/Posts/home.js
export function fetchAllPost(){
    $.ajax({
        type:'POST',
        url:'/src/Views/posts/list.php',
        datatype:'JSON',
        success: (response)=>{
            $('#allPost').html(response);
        }
    }) 
}
/src/Controllers/AuthControllers.php
<?php

if (session_status() === PHP_SESSION_NONE) {
    session_start();
}
include_once __DIR__ . '/../../config/database.php';
include_once __DIR__ . '/../Models/Account.php';

class AuthController {
    private $conn;
    private $account;

    public function __construct($db) {
        $this->conn = $db;
        $this->account = new Account($this->conn);
    }

    public function login($email, $password) {
        $user = $this->account->getUserByEmail($email);
        if ($user && password_verify($password, $user['mdp'])) {
            $_SESSION['email'] = $email;
            $_SESSION['lastName'] = $user['nom'];
            $_SESSION['firstName'] = $user['prenom'];
            $_SESSION['id_account'] = $user['id'];
            return true;
        } else {
            return false;
        }
    }

    public function register($lastName, $firstName, $email, $password) {
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        if ($this->account->getUserByEmail($email)) {
            return false;
        } else {
            $this->account->createUser($firstName, $lastName, $email, $hashedPassword);
            return true;
        }
    }

    public function logout() {
        session_unset();
        session_destroy();
    }
}
?>

/src/Controllers/CommentController.php

<?php
include_once __DIR__.'/../Models/Comment.php';

class CommentController {
    private $conn;
    private $comment;

    public function __construct($db) {
        $this->conn = $db;
        $this->comment = new Comment($db);
    }

    public function getCommentsForPost($post_id) {
        return $this->comment->getAllComments($post_id);
    }

    public function createComment($post_id, $author_id, $content) {
        $this->comment->addComment($post_id, $author_id, $content);
    }
    public function deleteComment($id){
        $this->comment->deleteByID($id);
    }
    public function getCommentById($id){
      return  $this->comment->getById($id);
    }
    public function editComs($id,$content){
        $this->comment->editById($id, $content);
        header('Location: /src/Views/posts/list.php');
        exit();
    }
}
/src/Controllers/PostController.php

<?php
include_once __DIR__.'/../Models/Post.php';

class PostController {
    private $conn;
    private $post;

    public function __construct($db) {
        $this->conn = $db;
        $this->post = new Post($db);
    }

    public function getAllPosts() {
        return $this->post->getAll();
    }

    public function createPost($content, $author_id) {
        $this->post->add($content, $author_id);
    }

    public function getPostById($id) {
        return $this->post->getById($id);
    }
    public function deletePost($id){
        $this->post->deleteById($id);
        header('Location: /src/Views/posts/list.php');
        exit();
    }
    public function editPost($id,$content){
        $this->post->editById($id, $content);
        header('Location: /src/Views/posts/list.php');
        exit();
    }

}

/src/Controllers/ReactionController.php
<?php
include_once __DIR__.'/../Models/Reaction.php';

class ReactionController{
    private $conn;
    private $postReaction;
    private $comsReaction;

    public function __construct($db){
        $this->conn = $db;
        $this->postReaction = new Reaction($db,"react_post","id_post");
        $this->comsReaction = new Reaction($db,"react_coms","id_comment");
    }
    public function setReactionOnPost($reaction,$id_author,$id){
        $this->postReaction->reactTo($reaction,$id,$id_author);
    }
    public function setReactionOnComs($reaction,$id_author,$id){
        $this->comsReaction->reactTo($reaction,$id,$id_author);
    }
    public function unsetReactionOnPost($id,$id_author){
        $this->postReaction->unreact($id,$id_author);
    }
    public function unsetReactionOnComs($id,$id_author){
        $this->comsReaction->unreact($id,$id_author);
    }
    public function getAuthorReactionOnPost($id,$id_author){
        return $this->postReaction->getReact($id,$id_author);
    }
    public function updateReactionOnPost($idCard,$react,$idReacter){
        $this->postReaction->updateReact($idCard, $react, $idReacter);
    }
    public function getAuthorReactionOnComs($id,$id_author){
        return $this->comsReaction->getReact($id,$id_author);
    }
    public function updateReactionOnComs($idCard,$react,$idReacter){
        $this->comsReaction->updateReact($idCard, $react, $idReacter);
    }
}
?>
/src/Models/Account.php
<?php
class Account {
    private $conn;
    private $table_name = "account";

    //METHOD
    public function __construct($db) {
        $this->conn = $db;
    }
    public function getUserByEmail($email){
        $sql = "SELECT * FROM ". $this->table_name . " WHERE email = ?";
        $result = $this->conn->prepare($sql);
        $result->execute([$email]);
        $data = $result->fetch(PDO::FETCH_ASSOC);
        return $data;
    }
    public function createUser($firstName, $lastName, $email, $password){
        $sql = "INSERT INTO ". $this->table_name ."(nom, prenom, email, mdp) VALUES (?, ?, ?, ?)";
        $result = $this->conn->prepare($sql);
        $result->execute([$firstName, $lastName, $email,$password]);
        $data = $result -> fetch(PDO::FETCH_ASSOC);
        return $data;
    }
    public function getInitials($firstName, $lastName){
        $name= $firstName ." ". $lastName;
        $initial=[];
        $values= explode(" ", $name);
        foreach($values as $value){
            if(!empty($value)){
                array_push($initial, $value[0]);
            }
        }
        $initialName=implode("", $initial);
        return $initialName;
    }
}
?>
/src/Models/Card.php
<?php
session_start();

class Card
{
    protected $conn;
    protected $table_name ;
    protected $id;


    //METHOD
    public function __construct($db, $table, $idtable)
    {
        $this->conn = $db;
        $this->table_name = $table;
        $this->id = $idtable;

    }
    public function getAll()
    {
        $sql = "SELECT " . $this->table_name . ".*, account.nom, account.prenom FROM " . $this->table_name . ' JOIN account ON account.id =' . $this->table_name . '.id_account ORDER BY '.$this->id .' DESC';
        $result = $this->conn->query($sql);
        $data = $result->fetchAll();
        return $data;
    }
    public function getById($id)
    {
        $sql = "SELECT * FROM " . $this->table_name . " JOIN account ON account.id = ".$this->table_name.".id_account WHERE ". $this->id ." =?";
        $result = $this->conn->prepare($sql);
        $result->execute([$id]);
        $data = $result->fetch();
        return $data;
    }
    //AJOUTER UNE PUBLICATION
    public function add($content, $author_id)
    {
        $sql = "INSERT INTO " . $this->table_name . "(id_account,content) VALUES(?,?)";
        $result = $this->conn->prepare($sql);
        $result->execute([$author_id, $content]);
        //REDIRECTION 
    }
    public function deleteById($id){
        $sql = "DELETE FROM ". $this->table_name ." WHERE  ".$this->id." = ?";
        $result=$this->conn->prepare($sql);
        $result->execute([$id]);
    }
    public function editById($id,$content){
        $sql = "UPDATE ". $this->table_name ." SET content = ? WHERE  ".$this->id."= ?";
        $result=$this->conn->prepare($sql);
        $result->execute([$content,$id]);
    }
}
?>
/src/Models/Comment.php
<?php
include_once(__DIR__.'/./Card.php');
class Comment extends Card {

    public function __construct($db) {
        $this->conn = $db;
        $this->table_name = "comments";
        $this->id="id_comment";
    }


    public function addComment($post_id, $author_id, $content) {
        $query = "INSERT INTO " . $this->table_name . " (id_post, id_account, content) VALUES (?, ?, ?)";
        $stmt = $this->conn->prepare($query);
        $stmt->execute([$post_id, $author_id, $content]);
    }
    public function getAllComments($id){
        $sql = "SELECT * FROM " . $this->table_name . " JOIN account ON account.id = ".$this->table_name.".id_account WHERE id_post =?";
        $result = $this->conn->prepare($sql);
        $result->execute([$id]);
        $data = $result->fetchAll();
        return $data;
    }
}

/src/Models/Post.php
<?php
include_once(__DIR__.'/./Card.php');
class Post extends Card {

    public function __construct($db) {
        $this->conn = $db;
        $this->table_name = "posts";
        $this->id='id_post';
    }


}
/src/Models/Reaction.php

<?php
class Reaction{
    protected $conn;
    private $table_name;
    private $id;

    public function __construct($db,$table,$idTable){
        $this->conn = $db;
        $this->table_name=$table;
        $this->id=$idTable;
    }
    public function reactTo($typeOfReact, $idCard, $idReacter ){
        $sql = 'INSERT INTO '.$this->table_name. '(react,'. $this->id .', id_account) VALUES(?, ?, ?)';
        $result = $this->conn->prepare($sql);
        $result->execute([$typeOfReact, $idCard, $idReacter]);
    }
    public function unreact($idCard,$id_author){
        $sql='DELETE FROM '.$this->table_name.' WHERE (' .$this->id.'= ? AND id_account = ?)';
        $result=$this->conn->prepare($sql);
        $result->execute([$idCard,$id_author]);
    }
    public function getReact($idCard,$id_author){
        $sql= 'SELECT * FROM '.$this->table_name.' WHERE ('.$this->id.' = ? AND id_account = ?)';
        $result = $this->conn->prepare($sql);
        $result->execute([$idCard,$id_author]);
        $data=$result->fetch();
        return $data;
    }
    public function updateReact($idCard,$react,$idReacter){
        $sql='UPDATE '.$this->table_name.' SET react = ? WHERE ('.$this->id.'= ? AND id_account = ? )';
        $result=$this->conn->prepare($sql);
        $result->execute([$react, $idCard, $idReacter]);

    }   
    
}
?>
/src/Views/auth/login.php
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}


include_once __DIR__ . '/../../config/database.php';
include_once __DIR__ . '/../Models/Account.php';
include_once __DIR__ . '/../Controllers/AuthController.php';

// Connexion à la base de données
$db = new Database();
$conn = $db->getConnection();
$authController = new AuthController($conn);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Appel de la méthode de connexion
    if ($authController->login($email, $password)) {
        echo json_encode(['status' => 'success', 'message' => 'Login successful!']);
    } else {
        echo json_encode(['status' => 'error', 'message' => 'Identifiant ou mot de passe invalide']);
    }
}
?>

/src/Views/auth/register.php
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

include_once __DIR__ . '/../../config/database.php';
include_once __DIR__ . '/../Models/Account.php';
include_once __DIR__ . '/../Controllers/AuthController.php';


// Connexion à la base de données
$db = new Database();
$conn = $db->getConnection();
$authController = new AuthController($conn);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $lastName = $_POST['lastName'];
    $firstName = $_POST['firstName'];
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Appel de la méthode d'enregistrement
    if ($authController->register($lastName, $firstName, $email, $password)) {
        echo json_encode(['status' => 'success', 'message' => 'Registration successful!']);
    } else {
        echo json_encode(['status' => 'error', 'message' => 'Email déjà utilisé']);
    }
}
?>

/src/Views/comments/create.php
<?php if($_SERVER['REQUEST_METHOD']=='POST'){
    if(isset($_POST['id_pub'])){
        $id_pub=$_POST['id_pub'];
    }
} ?>
<link rel="stylesheet" href="/public/assets/css/output.css">
   <div class="w-full !bg-[#fffff0] items-center justify-center  flex " >
        <form  class="flex flex-col w-1/2 !h-screen p-5 shadow-2xl border-black  rounded-lg" method="post">
            <div><?php   echo '<span class="font-bold text-md">' .$_SESSION['firstName'].' '.$_SESSION['lastName']  .'</span>' ?></div>
            <textarea class="!outline-none " name="comment" id="" placeholder="Votre commentaire..."  ></textarea>
            <button name='id_pub' value="<?php echo $id_pub ?>" type="submit" class="!bg-blue-600 w-max py-2 px-1  rounded-lg text-md text-[#fcf2f8] shadow-lg">Commenter</button>
        </form>
    </div>
    
    <?php

include_once(__DIR__ . '/../../Controllers/CommentController.php');
include_once(__DIR__ . '/../../Controllers/AuthController.php');


$database = new Database();
$db = $database->getConnection();
$authController = new AuthController($db);
$commentController = new CommentController($db);
if ($_SERVER['REQUEST_METHOD']) {
    if (isset($_POST['comment'])) {
       $commentController->createComment($_POST['id_pub'], $_SESSION['id_account'],$_POST['comment']);
    }
}
?>

/src/Views/listComments.php
<?php
include_once(__DIR__ . '/../../Controllers/CommentController.php');
include_once(__DIR__ . '/../../Controllers/AuthController.php');


$database = new Database();
$db = $database->getConnection();
$authController = new AuthController($db);
$commentController = new CommentController($db);
$reactionController = new ReactionController($db);
$reactions = ['Love', 'Like', 'Haha', 'Grr'];
$VIPoptions = ['supprimer', 'modifier'];


if($_SERVER['REQUEST_METHOD']=='POST'){
    if(isset($_POST['id_pub'])){
      $comments =$commentController->getCommentsForPost($_POST['id_pub']);
      foreach ($comments as $comment){
        if ($_SESSION['id_account'] == $comment['id_account']) {

            $options = array_merge($reactions, $VIPoptions);
      } else {
          $options = $reactions;
      }
      
    
?>
<link rel="stylesheet" href="/public/assets/css/output.css">
<div class="flex flex-col  w-full items-center gap-2 bg-[#fffff0]" >

       <div  class="w-1/2 justify-center p-2 flex flex-col bg-[#f2f8fc] shadow-lg rounded-sm " >
       <div class="font-bold"><?php echo $comment['nom'].' '.$comment['prenom'] ?></div>
        <div><?php echo $comment['content'] ?></div>
       </div>
       <div class="flex  gap-5">
                <?php foreach ($options as $option): ?>
                    <form action="<?php if($option=='modifier') echo "/src/Views/comments/update.php" ?>" method="post" class="">
                        <input type="text" name="optionCom" value="<?php echo $option ?>" hidden>
                        <button type="submit" name="id_coms" value="<?php echo $comment['id_comment'] ?>"><?php echo $option ?></button>
                    </form>
                                    <?php endforeach ?>
            </div>
                <?php }
    }
}
    ?>
     <?php   $reactionController = new ReactionController($db);
                    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
                        
                        if (isset($_POST['optionCom'])) {
                            
                            if(isset($_POST['id_coms'])){
                            if ($_POST['optionCom'] == 'supprimer') {
                                $commentController->deleteComment($_POST['id_coms']);
                                header('Location: /src/Views/posts/list.php');
                                exit() ;
                            }
                            else if($_POST['optionCom'] !=='modifier'){
                            
                                    $myReactOncoms = $reactionController->getAuthorReactionOnComs($_POST['id_coms'],$_SESSION['id_account']);
                                
                                    if($myReactOncoms){
                                        if($myReactOncoms['react'] == $_POST['optionCom']){
                                            $reactionController->unsetReactionOnComs($_POST['id_coms'],$_SESSION['id_account']);
                                        }
                                        else{
                                            $reactionController->updateReactionOnComs($_POST['id_coms'],$_POST['optionCom'],$_SESSION['id_account']);
                                        }
                                    }
                                    else{
                                        $reactionController->setReactionOnComs($_POST['optionCom'],$_SESSION['id_account'],$_POST['id_coms']);
                                    }
                                
                            }
                            
                            
                        }
                        }

                    } ?>
</div>
<?php     include(__DIR__.'/../../Helpers/backToHome.php');
 
 ?>
 /src/Views/comments/update.php
 <?php
include_once __DIR__ . '/../../../config/database.php';
include_once(__DIR__ . '/../../Controllers/CommentController.php');
include_once(__DIR__ . '/../../Controllers/AuthController.php');
$database = new Database();
$db = $database->getConnection();
$commentController = new CommentController($db);

if (isset($_POST['id_coms'])) {
    $coms = $commentController->getCommentById($_POST['id_coms'])
?>

    <head>
        <link rel="stylesheet" href="../../../output.css">
    </head>
    <div class="flex flex-col items-center justify-center ">
        <div class="p-5 shadow-2xl border-black w-1/2 rounded-lg">
            <form class="flex flex-col" method="post">
                <div><?php echo '<span class=" font-bold text-2xl">' . $_SESSION['firstName']  . ', </span>' ?></div>
                <input type="text" name="id_coms" value="<?php echo $_POST['id_coms'] ?>" hidden>
                <textarea class="!outline-none" name="coms" id="" placeholder="<?php echo $coms['content'] ?>"></textarea>
                <button type="submit" name="options" value="modifier" class="!bg-blue-600 w-max p-2 rounded-lg text-xl text-[#fcf2f8] shadow-lg">Modifier</button>
            </form>
        </div>
    </div>
<?php
}
if (isset($_POST['id_coms']) && isset($_POST['coms'])) {
    $commentController->editComs($_POST['id_coms'], $_POST['coms']);
    header('Location: /src/Views/posts/list.php');
    exit();
}
?>
/src/Views/layout/header.php
<?php
include_once(__DIR__.'/../../Controllers/AuthController.php');

 $database = new Database();
 $db = $database->getConnection();
$logoutController = new AuthController($db);

?>
<link rel="stylesheet" href="/public/assets/css/output.css">

<div class="!bg-blue-600 w-screen p-5 flex flex-row justify-between">
    <div class="">m<span class="!text-white font-bold text-2xl">e</span>-<span class=" !text-white font-bold ">serasera</span></div>
    <form  method="post">
        <button type="submit" class=" !bg-red-300 p-2 rounded-lg text-[#f2f8fc]" name="logout">Se deconnecter</button>
    </form>
</div>
<?php
    if($_SERVER['REQUEST_METHOD']=='POST'){
        if(isset($_POST['logout'])){
            $logoutController->logout();
        }
    }
?>
/src/Views/posts/create.php
<?php
    if (session_status() === PHP_SESSION_NONE) {
        session_start();
    }
?>
<link rel="stylesheet" href="/public/assets/css/output.css">
<div class="items-center justify-center  flex ">
    <form class="flex flex-col w-1/2 !h-screen p-5 shadow-2xl border-black  rounded-lg" method="post">
        <div><?php echo '<span class="font-bold text-2xl">' . $_SESSION['firstName']  . ', Que voulez-vous publiez...</span>' ?></div>
        <textarea class="!outline-none " name="pub" id="" placeholder="A quoi pensez-vous ?" style="height: 100px;"></textarea>
        <button type="submit" class="!bg-blue-600 w-max p-2 rounded-lg text-xl text-[#fcf2f8] shadow-lg">Publier</button>
    </form>
</div>

<?php
include_once(__DIR__ . '/../../Controllers/PostController.php');
include_once(__DIR__ . '/../../Controllers/AuthController.php');


$database = new Database();
$db = $database->getConnection();
$authController = new AuthController($db);
$postController = new PostController($db);
if ($_SERVER['REQUEST_METHOD']) {
    if (isset($_POST['pub'])) {
        $postController->createPost($_POST['pub'], $_SESSION['id_account']);
    }
}
?>
/src/Views/posts/list.php
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}
include_once(__DIR__ . '/../../Controllers/PostController.php');
include_once(__DIR__ . '/../../Controllers/AuthController.php');

include(__DIR__ . '/../layouts/header.php');
include(__DIR__ . '/create.php');
$database = new Database();
$db = $database->getConnection();
$authController = new AuthController($db);
$postController = new PostController($db);
$posts = $postController->getAllPosts();
$account= new Account($db);

?>

    <div class="flex flex-col justify-center items-center">
        <?php if (isset($posts)) {
            foreach ($posts as $post) { ?>
                <div class="flex flex-col shadow-2xl border-black p-5 w-1/2  rounded-lg !bg-[#f2f8fc] ">
                    <div class="flex gap-4 h-max items-center">
                        <div class=" !w-20 !h-20 p-2 font-bold !text-white !bg-blue-400"><div><?php echo $account->getInitials($post['nom'], $post['prenom']) ?></div></div>
                        <p class="font-bold"> <?php echo $post['nom'] . ' ' . $post['prenom'] ?> </p>
                    </div>
                    <div class="h-50 overflow-y-hidden">
                        <p class="!font-light  w-full "> <?php echo $post['content'] ?> </p>
                    </div>
                    <div>
                        <form action="../posts/viewPost.php" method="post">
                            <input name="id_pub" type="text" hidden value='<?php echo $post['id_post'] ?>'>
                            <button type="submit" class="!bg-blue-400 text-[#fcf2f8] p-2 text-xs rounded-lg">Voir la publication</button>
                        </form>
                    </div>
                </div>
        <?php    }
        }

        ?>

    </div>  

/src/Views/posts/update.php
<?php
include_once __DIR__ . '/../../../config/database.php';
include_once(__DIR__ . '/../../Controllers/PostController.php');
include_once(__DIR__ . '/../../Controllers/AuthController.php');
$database = new Database();
$db = $database->getConnection();
$postController = new PostController($db);

if (isset($_POST['id_pub'])) {
    $pub = $postController->getPostById($_POST['id_pub'])
?>

    <head>
        <link rel="stylesheet" href="../../../output.css">
    </head>
    <div class="flex flex-col items-center justify-center ">
        <div class="p-5 shadow-2xl border-black w-1/2 rounded-lg">
            <form class="flex flex-col" method="post">
                <div><?php echo '<span class=" font-bold text-2xl">' . $_SESSION['firstName']  . ', Que voulez-vous publiez...</span>' ?></div>
                <input type="text" name="id_pub" value="<?php echo $_POST['id_pub'] ?>" hidden>
                <textarea class="!outline-none" name="pub" id="" placeholder="<?php echo $pub['content'] ?>"></textarea>
                <button type="submit" name="options" value="modifier" class="!bg-blue-600 w-max p-2 rounded-lg text-xl text-[#fcf2f8] shadow-lg">Modifier</button>
            </form>
        </div>
    </div>
<?php
}
if (isset($_POST['id_pub']) && isset($_POST['pub'])) {
    $postController->editPost($_POST['id_pub'], $_POST['pub']);
    header('Location: /src/Views/posts/list.php');
    exit();
}
?>
/src/Views/posts/viewPost.php
<?php
include_once(__DIR__ . '/../../Controllers/PostController.php');
include_once(__DIR__ . '/../../Controllers/AuthController.php');
include_once(__DIR__ . '/../../Controllers/ReactionController.php');
include(__DIR__ . '/../layouts/header.php');

$database = new Database();
$db = $database->getConnection();
$authController = new AuthController($db);
$postController = new PostController($db);
$reactionController = new ReactionController($db);
$reactions = ['Love', 'Like', 'Haha', 'Grr'];
$VIPoptions = ['supprimer', 'modifier'];


if ($_SERVER['REQUEST_METHOD']=='POST') {
    if (isset($_POST['id_pub'])) {
        $post = $postController->getPostById($_POST['id_pub']);
        if ($_SESSION['id_account'] == $post['id_account']) {
            $options = array_merge($reactions, $VIPoptions);
        } else {
            $options = $reactions;
        }
?>
        <link rel="stylesheet" href="/public/assets/css/output.css">
        <div class="flex flex-col items-center justify-center ">
            <div class="  !bg-[#f2f8fc] w-1/2 rounded-md p-2 shadow-2xl ">
                <div class="font-bold text-2xl"><?php echo $post['nom'] . ' ' . $post['prenom']  ?></div>
                <div class="text-4xl !w-2/3"><?php echo $post['content'] ?></div>
                <div class="text-xs">Publié le <?php echo $post['date_heure'] ?> </div>
            </div>
            <div class="flex  gap-5 !bg-[#f4f1f8] shadow-2xl rounded-lg">
                <?php foreach ($options as $option): ?>
                    <form action="<?php if($option=='modifier') echo "update.php" ?>" method="post" class="">
                        <input type="text" name="options" value="<?php echo $option ?>" hidden>
                        <button type="submit" name="id_pub" value="<?php echo $post['id_post'] ?>"><?php echo $option ?></button>
                    </form>
                <?php endforeach ?>
            </div>
            <?php include(__DIR__ . '/../comments/create.php') ?>

        </div>
<?php  }
}
$reactionController = new ReactionController($db);
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['options'])) {
        if(isset($_POST['id_pub'])){
            if ($_POST['options'] == 'supprimer') {
                $postController->deletePost($_POST['id_pub']);
                return ;
            }
            else if($_POST['options'] !=='modifier'){
              
                    $myReact = $reactionController->getAuthorReactionOnPost($_POST['id_pub'],$_SESSION['id_account']);
                
                    if($myReact){
                        if($myReact['react'] == $_POST['options']){
                            $reactionController->unsetReactionOnPost($_POST['id_pub'],$_SESSION['id_account']);
                        }
                        else{
                            $reactionController->updateReactionOnPost($_POST['id_pub'],$_POST['options'],$_SESSION['id_account']);
                        }
                    }
                    else{
                        $reactionController->setReactionOnPost($_POST['options'],$_SESSION['id_account'],$_POST['id_pub']);
                    }
                
            }
        }
        
        

    }
}

?>
            <?php include(__DIR__ . '/../comments/listComments.php') ?> 
index.php
<?php
session_start();
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="./output.css">
    <script src="/public/assets/js/jquery-3.7.1.min.js" ></script>
    <script type="module"  src="/public/assets/js/auth/register.js"></script>

</head>
<body>
    <div id="register"  class="form-container w-screen h-screen flex justify-center items-center !bg-[url('assets/images/bg.jpg')]">
        <form id="registerForm"  class="bg-[#f2f8fc] rounded-2xl p-5 flex flex-col gap-5" method="post">
            <div class="font-bold">INSCRIPTION</div>
            <div>
                <label for="lastName">Nom: </label>
                <input type="text" name="lastName">
            </div>
            <div>
                <label for="firstName">Prenom: </label>
                <input type="text" name="firstName">
            </div>
            <div>
                <label for="email">Email: </label>
                <input type="email" name="email" required>
            </div>
            <div>
                <label for="password">Mot de passe: </label>
                <input type="password" name="password">
            </div>
    
            <div class="!bg-red-500 !text-extrabold w-max p-2 rounded-lg ">
                <input type="submit" value="S'inscrire" class="cursor-pointer">
            </div>
            <div>Vous avez déjà un compte ? <a  class="!font-extrabold">Connectez-vous</a></div>
        </form>
    </div>
    <div id="login" class="form-container  w-screen h-screen flex justify-center items-center !bg-[url('assets/images/bg.jpg')]">
        <form id="loginForm" action="" class="bg-[#f2f8fc] rounded-2xl p-5 flex flex-col gap-5" method="post">
        <div class="font-bold">CONNEXION</div>    
    
        <div>
                <label for="email">Email: </label>
                <input type="text" name="email" class=" !shadow-4xl" required>
            </div>
            <div>
                <label for="password">Mot de passe: </label>
                <input type="password" class="!shadow-inner" name="password">
            </div>
            <div class="!bg-red-500 !text-extrabold w-max p-2 rounded-lg">
            <input type="submit" value="Se connecter" class="cursor-pointer">
            </div>
       
            <div>Vous n'avez pas encore un compte ? <a href="./register.php" class="!font-extrabold">Inscrivez-vous</a></div>
        <div><a href="forgot_password.php" class="!font-light">Mot de passe oublié</a></div>
        </form>
    </div>
    <div id="allPost">
        
    </div>
    
</body>
</html>

